<refentry id="ORBit2-orbit2-small">
<refmeta>
<refentrytitle role="top_of_page" id="ORBit2-orbit2-small.top_of_page">orbit2-small</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ORBIT2 Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>orbit2-small</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ORBit2-orbit2-small.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="ORBit-IModule">ORBit_IModule</link>;
const <link linkend="char">char</link> *        <link linkend="ORBit-get-safe-tmp">ORBit_get_safe_tmp</link>                  (void);
<link linkend="gpointer">gpointer</link>            <link linkend="ORBit-small-alloc">ORBit_small_alloc</link>                   (<link linkend="CORBA-TypeCode">CORBA_TypeCode</link> tc);
<link linkend="gpointer">gpointer</link>            <link linkend="ORBit-small-allocbuf">ORBit_small_allocbuf</link>                (<link linkend="CORBA-TypeCode">CORBA_TypeCode</link> tc,
                                                         <link linkend="CORBA-unsigned-long">CORBA_unsigned_long</link> length);
<link linkend="void">void</link>                <link linkend="ORBit-small-freekids">ORBit_small_freekids</link>                (<link linkend="CORBA-TypeCode">CORBA_TypeCode</link> tc,
                                                         <link linkend="gpointer">gpointer</link> p,
                                                         <link linkend="gpointer">gpointer</link> d);
<link linkend="gpointer">gpointer</link>            <link linkend="ORBit-sequence-alloc">ORBit_sequence_alloc</link>                (<link linkend="CORBA-TypeCode">CORBA_TypeCode</link> sequence_tc,
                                                         <link linkend="CORBA-unsigned-long">CORBA_unsigned_long</link> length);
<link linkend="void">void</link>                <link linkend="ORBit-sequence-append">ORBit_sequence_append</link>               (<link linkend="gpointer">gpointer</link> sequence,
                                                         <link linkend="gconstpointer">gconstpointer</link> element);
<link linkend="void">void</link>                <link linkend="ORBit-sequence-set-size">ORBit_sequence_set_size</link>             (<link linkend="gpointer">gpointer</link> sequence,
                                                         <link linkend="CORBA-unsigned-long">CORBA_unsigned_long</link> length);
#define             <link linkend="ORBit-sequence-index">ORBit_sequence_index</link>                (sequence,idx)
<link linkend="void">void</link>                <link linkend="ORBit-sequence-concat">ORBit_sequence_concat</link>               (<link linkend="gpointer">gpointer</link> sequence,
                                                         <link linkend="gconstpointer">gconstpointer</link> append);
enum                <link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>;
<link linkend="gpointer">gpointer</link>            <link linkend="ORBit-small-get-servant">ORBit_small_get_servant</link>             (<link linkend="CORBA-Object">CORBA_Object</link> obj);
<link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>  <link linkend="ORBit-small-get-connection-status">ORBit_small_get_connection_status</link>
                                                        (<link linkend="CORBA-Object">CORBA_Object</link> obj);
<link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>  <link linkend="ORBit-small-listen-for-broken">ORBit_small_listen_for_broken</link>    (<link linkend="CORBA-Object">CORBA_Object</link> obj,
                                                         <link linkend="GCallback">GCallback</link> fn,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>  <link linkend="ORBit-small-unlisten-for-broken-full">ORBit_small_unlisten_for_broken_full</link>
                                                        (<link linkend="CORBA-Object">CORBA_Object</link> obj,
                                                         <link linkend="GCallback">GCallback</link> fn,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>  <link linkend="ORBit-small-unlisten-for-broken">ORBit_small_unlisten_for_broken</link>  (<link linkend="CORBA-Object">CORBA_Object</link> obj,
                                                         <link linkend="GCallback">GCallback</link> fn);
                    <link linkend="ORBitConnection">ORBitConnection</link>;
<link linkend="ORBitConnection">ORBitConnection</link> *   <link linkend="ORBit-small-get-connection">ORBit_small_get_connection</link>          (<link linkend="CORBA-Object">CORBA_Object</link> obj);
<link linkend="ORBitConnection">ORBitConnection</link> *   <link linkend="ORBit-small-get-connection-ref">ORBit_small_get_connection_ref</link>      (<link linkend="CORBA-Object">CORBA_Object</link> obj);
<link linkend="void">void</link>                <link linkend="ORBit-small-connection-unref">ORBit_small_connection_unref</link>        (<link linkend="ORBitConnection">ORBitConnection</link> *cnx);
<link linkend="void">void</link>                <link linkend="ORBit-connection-set-max-buffer">ORBit_connection_set_max_buffer</link>     (<link linkend="ORBitConnection">ORBitConnection</link> *cnx,
                                                         <link linkend="gulong">gulong</link> max_buffer_bytes);
<link linkend="ORBit-IInterface">ORBit_IInterface</link> *  <link linkend="ORBit-small-get-iinterface">ORBit_small_get_iinterface</link>          (<link linkend="CORBA-Object">CORBA_Object</link> opt_object,
                                                         const <link linkend="CORBA-char">CORBA_char</link> *repo_id,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
extern              int     <link linkend="ORBit-small-flags">ORBit_small_flags</link>;
<link linkend="CORBA-sequence-ORBit-IInterface">CORBA_sequence_ORBit_IInterface</link> * <link linkend="ORBit-small-get-iinterfaces">ORBit_small_get_iinterfaces</link>
                                                        (const <link linkend="char">char</link> *name);
                    <link linkend="ORBitAsyncQueueEntry">ORBitAsyncQueueEntry</link>;
<link linkend="void">void</link>                <link linkend="ORBit-small-invoke-stub-n">ORBit_small_invoke_stub_n</link>           (<link linkend="CORBA-Object">CORBA_Object</link> object,
                                                         <link linkend="ORBit-IMethods">ORBit_IMethods</link> *methods,
                                                         <link linkend="glong">glong</link> index,
                                                         <link linkend="gpointer">gpointer</link> ret,
                                                         <link linkend="gpointer">gpointer</link> *args,
                                                         <link linkend="CORBA-Context">CORBA_Context</link> ctx,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
<link linkend="CORBA-char">CORBA_char</link> *        <link linkend="ORBit-small-get-type-id">ORBit_small_get_type_id</link>             (<link linkend="CORBA-Object">CORBA_Object</link> object,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
<link linkend="void">void</link>                (<link linkend="ORBitAsyncInvokeFunc">*ORBitAsyncInvokeFunc</link>)             (<link linkend="CORBA-Object">CORBA_Object</link> object,
                                                         <link linkend="ORBit-IMethod">ORBit_IMethod</link> *m_data,
                                                         <link linkend="ORBitAsyncQueueEntry">ORBitAsyncQueueEntry</link> *aqe,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
<link linkend="void">void</link>                <link linkend="ORBit-small-demarshal-async">ORBit_small_demarshal_async</link>         (<link linkend="ORBitAsyncQueueEntry">ORBitAsyncQueueEntry</link> *aqe,
                                                         <link linkend="gpointer">gpointer</link> ret,
                                                         <link linkend="gpointer">gpointer</link> *args,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
<link linkend="void">void</link>                <link linkend="ORBit-small-invoke-stub">ORBit_small_invoke_stub</link>             (<link linkend="CORBA-Object">CORBA_Object</link> object,
                                                         <link linkend="ORBit-IMethod">ORBit_IMethod</link> *m_data,
                                                         <link linkend="gpointer">gpointer</link> ret,
                                                         <link linkend="gpointer">gpointer</link> *args,
                                                         <link linkend="CORBA-Context">CORBA_Context</link> ctx,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
<link linkend="void">void</link>                <link linkend="ORBit-small-invoke-async">ORBit_small_invoke_async</link>            (<link linkend="CORBA-Object">CORBA_Object</link> obj,
                                                         <link linkend="ORBit-IMethod">ORBit_IMethod</link> *m_data,
                                                         <link linkend="ORBitAsyncInvokeFunc">ORBitAsyncInvokeFunc</link> fn,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="gpointer">gpointer</link> *args,
                                                         <link linkend="CORBA-Context">CORBA_Context</link> ctx,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
#define             <link linkend="ORBIT-SMALL-FAST-LOCALS--CAPS">ORBIT_SMALL_FAST_LOCALS</link>
#define             <link linkend="ORBIT-SMALL-FORCE-GENERIC-MARSHAL--CAPS">ORBIT_SMALL_FORCE_GENERIC_MARSHAL</link>
<link linkend="CORBA-sequence-CORBA-TypeCode">CORBA_sequence_CORBA_TypeCode</link> * <link linkend="ORBit-small-get-types">ORBit_small_get_types</link>   (const <link linkend="char">char</link> *name);
<link linkend="gboolean">gboolean</link>            <link linkend="ORBit-small-load-typelib">ORBit_small_load_typelib</link>            (const <link linkend="char">char</link> *libname);
</synopsis>
</refsynopsisdiv>









<refsect1 id="ORBit2-orbit2-small.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="ORBit2-orbit2-small.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="ORBit-IModule" role="struct">
<title>ORBit_IModule</title>
<indexterm zone="ORBit-IModule"><primary sortas="ORBit_IModule">ORBit_IModule</primary></indexterm><programlisting>typedef struct {
	CORBA_unsigned_long           version;
	ORBit_IInterface            **interfaces;
	CORBA_sequence_CORBA_TypeCode types;
} ORBit_IModule;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ORBit-get-safe-tmp" role="function">
<title>ORBit_get_safe_tmp ()</title>
<indexterm zone="ORBit-get-safe-tmp"><primary sortas="ORBit_get_safe_tmp">ORBit_get_safe_tmp</primary></indexterm><programlisting>const <link linkend="char">char</link> *        ORBit_get_safe_tmp                  (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-alloc" role="function">
<title>ORBit_small_alloc ()</title>
<indexterm zone="ORBit-small-alloc"><primary sortas="ORBit_small_alloc">ORBit_small_alloc</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            ORBit_small_alloc                   (<link linkend="CORBA-TypeCode">CORBA_TypeCode</link> tc);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>tc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-allocbuf" role="function">
<title>ORBit_small_allocbuf ()</title>
<indexterm zone="ORBit-small-allocbuf"><primary sortas="ORBit_small_allocbuf">ORBit_small_allocbuf</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            ORBit_small_allocbuf                (<link linkend="CORBA-TypeCode">CORBA_TypeCode</link> tc,
                                                         <link linkend="CORBA-unsigned-long">CORBA_unsigned_long</link> length);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>tc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-freekids" role="function">
<title>ORBit_small_freekids ()</title>
<indexterm zone="ORBit-small-freekids"><primary sortas="ORBit_small_freekids">ORBit_small_freekids</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_small_freekids                (<link linkend="CORBA-TypeCode">CORBA_TypeCode</link> tc,
                                                         <link linkend="gpointer">gpointer</link> p,
                                                         <link linkend="gpointer">gpointer</link> d);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>tc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>p</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>d</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-sequence-alloc" role="function">
<title>ORBit_sequence_alloc ()</title>
<indexterm zone="ORBit-sequence-alloc"><primary sortas="ORBit_sequence_alloc">ORBit_sequence_alloc</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            ORBit_sequence_alloc                (<link linkend="CORBA-TypeCode">CORBA_TypeCode</link> sequence_tc,
                                                         <link linkend="CORBA-unsigned-long">CORBA_unsigned_long</link> length);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sequence_tc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-sequence-append" role="function">
<title>ORBit_sequence_append ()</title>
<indexterm zone="ORBit-sequence-append"><primary sortas="ORBit_sequence_append">ORBit_sequence_append</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_sequence_append               (<link linkend="gpointer">gpointer</link> sequence,
                                                         <link linkend="gconstpointer">gconstpointer</link> element);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sequence</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>element</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-sequence-set-size" role="function">
<title>ORBit_sequence_set_size ()</title>
<indexterm zone="ORBit-sequence-set-size"><primary sortas="ORBit_sequence_set_size">ORBit_sequence_set_size</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_sequence_set_size             (<link linkend="gpointer">gpointer</link> sequence,
                                                         <link linkend="CORBA-unsigned-long">CORBA_unsigned_long</link> length);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sequence</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-sequence-index" role="macro">
<title>ORBit_sequence_index()</title>
<indexterm zone="ORBit-sequence-index"><primary sortas="ORBit_sequence_index">ORBit_sequence_index</primary></indexterm><programlisting>#define        ORBit_sequence_index(sequence,idx) (sequence)-&gt;_buffer[(idx)]
</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sequence</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>idx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-sequence-concat" role="function">
<title>ORBit_sequence_concat ()</title>
<indexterm zone="ORBit-sequence-concat"><primary sortas="ORBit_sequence_concat">ORBit_sequence_concat</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_sequence_concat               (<link linkend="gpointer">gpointer</link> sequence,
                                                         <link linkend="gconstpointer">gconstpointer</link> append);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sequence</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>append</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBitConnectionStatus" role="enum">
<title>enum ORBitConnectionStatus</title>
<indexterm zone="ORBitConnectionStatus"><primary sortas="ORBitConnectionStatus">ORBitConnectionStatus</primary></indexterm><programlisting>typedef enum {
	ORBIT_CONNECTION_CONNECTED,
	ORBIT_CONNECTION_CONNECTING,
	ORBIT_CONNECTION_DISCONNECTED,
	ORBIT_CONNECTION_IN_PROC
} ORBitConnectionStatus;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ORBit-small-get-servant" role="function">
<title>ORBit_small_get_servant ()</title>
<indexterm zone="ORBit-small-get-servant"><primary sortas="ORBit_small_get_servant">ORBit_small_get_servant</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            ORBit_small_get_servant             (<link linkend="CORBA-Object">CORBA_Object</link> obj);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-get-connection-status" role="function">
<title>ORBit_small_get_connection_status ()</title>
<indexterm zone="ORBit-small-get-connection-status"><primary sortas="ORBit_small_get_connection_status">ORBit_small_get_connection_status</primary></indexterm><programlisting><link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>  ORBit_small_get_connection_status
                                                        (<link linkend="CORBA-Object">CORBA_Object</link> obj);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-listen-for-broken" role="function">
<title>ORBit_small_listen_for_broken ()</title>
<indexterm zone="ORBit-small-listen-for-broken"><primary sortas="ORBit_small_listen_for_broken">ORBit_small_listen_for_broken</primary></indexterm><programlisting><link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>  ORBit_small_listen_for_broken    (<link linkend="CORBA-Object">CORBA_Object</link> obj,
                                                         <link linkend="GCallback">GCallback</link> fn,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fn</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-unlisten-for-broken-full" role="function">
<title>ORBit_small_unlisten_for_broken_full ()</title>
<indexterm zone="ORBit-small-unlisten-for-broken-full"><primary sortas="ORBit_small_unlisten_for_broken_full">ORBit_small_unlisten_for_broken_full</primary></indexterm><programlisting><link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>  ORBit_small_unlisten_for_broken_full
                                                        (<link linkend="CORBA-Object">CORBA_Object</link> obj,
                                                         <link linkend="GCallback">GCallback</link> fn,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fn</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-unlisten-for-broken" role="function">
<title>ORBit_small_unlisten_for_broken ()</title>
<indexterm zone="ORBit-small-unlisten-for-broken"><primary sortas="ORBit_small_unlisten_for_broken">ORBit_small_unlisten_for_broken</primary></indexterm><programlisting><link linkend="ORBitConnectionStatus">ORBitConnectionStatus</link>  ORBit_small_unlisten_for_broken  (<link linkend="CORBA-Object">CORBA_Object</link> obj,
                                                         <link linkend="GCallback">GCallback</link> fn);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fn</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBitConnection" role="struct">
<title>ORBitConnection</title>
<indexterm zone="ORBitConnection"><primary sortas="ORBitConnection">ORBitConnection</primary></indexterm><programlisting>typedef struct _ORBitConnection ORBitConnection;</programlisting>
<para>
</para></refsect2>
<refsect2 id="ORBit-small-get-connection" role="function">
<title>ORBit_small_get_connection ()</title>
<indexterm zone="ORBit-small-get-connection"><primary sortas="ORBit_small_get_connection">ORBit_small_get_connection</primary></indexterm><programlisting><link linkend="ORBitConnection">ORBitConnection</link> *   ORBit_small_get_connection          (<link linkend="CORBA-Object">CORBA_Object</link> obj);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-get-connection-ref" role="function">
<title>ORBit_small_get_connection_ref ()</title>
<indexterm zone="ORBit-small-get-connection-ref"><primary sortas="ORBit_small_get_connection_ref">ORBit_small_get_connection_ref</primary></indexterm><programlisting><link linkend="ORBitConnection">ORBitConnection</link> *   ORBit_small_get_connection_ref      (<link linkend="CORBA-Object">CORBA_Object</link> obj);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-connection-unref" role="function">
<title>ORBit_small_connection_unref ()</title>
<indexterm zone="ORBit-small-connection-unref"><primary sortas="ORBit_small_connection_unref">ORBit_small_connection_unref</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_small_connection_unref        (<link linkend="ORBitConnection">ORBitConnection</link> *cnx);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cnx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-connection-set-max-buffer" role="function">
<title>ORBit_connection_set_max_buffer ()</title>
<indexterm zone="ORBit-connection-set-max-buffer"><primary sortas="ORBit_connection_set_max_buffer">ORBit_connection_set_max_buffer</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_connection_set_max_buffer     (<link linkend="ORBitConnection">ORBitConnection</link> *cnx,
                                                         <link linkend="gulong">gulong</link> max_buffer_bytes);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cnx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_buffer_bytes</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-get-iinterface" role="function">
<title>ORBit_small_get_iinterface ()</title>
<indexterm zone="ORBit-small-get-iinterface"><primary sortas="ORBit_small_get_iinterface">ORBit_small_get_iinterface</primary></indexterm><programlisting><link linkend="ORBit-IInterface">ORBit_IInterface</link> *  ORBit_small_get_iinterface          (<link linkend="CORBA-Object">CORBA_Object</link> opt_object,
                                                         const <link linkend="CORBA-char">CORBA_char</link> *repo_id,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>opt_object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>repo_id</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-flags" role="variable">
<title>ORBit_small_flags</title>
<indexterm zone="ORBit-small-flags"><primary sortas="ORBit_small_flags">ORBit_small_flags</primary></indexterm><programlisting>extern int     ORBit_small_flags;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ORBit-small-get-iinterfaces" role="function">
<title>ORBit_small_get_iinterfaces ()</title>
<indexterm zone="ORBit-small-get-iinterfaces"><primary sortas="ORBit_small_get_iinterfaces">ORBit_small_get_iinterfaces</primary></indexterm><programlisting><link linkend="CORBA-sequence-ORBit-IInterface">CORBA_sequence_ORBit_IInterface</link> * ORBit_small_get_iinterfaces
                                                        (const <link linkend="char">char</link> *name);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBitAsyncQueueEntry" role="struct">
<title>ORBitAsyncQueueEntry</title>
<indexterm zone="ORBitAsyncQueueEntry"><primary sortas="ORBitAsyncQueueEntry">ORBitAsyncQueueEntry</primary></indexterm><programlisting>typedef struct _ORBitAsyncQueueEntry ORBitAsyncQueueEntry;</programlisting>
<para>
</para></refsect2>
<refsect2 id="ORBit-small-invoke-stub-n" role="function">
<title>ORBit_small_invoke_stub_n ()</title>
<indexterm zone="ORBit-small-invoke-stub-n"><primary sortas="ORBit_small_invoke_stub_n">ORBit_small_invoke_stub_n</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_small_invoke_stub_n           (<link linkend="CORBA-Object">CORBA_Object</link> object,
                                                         <link linkend="ORBit-IMethods">ORBit_IMethods</link> *methods,
                                                         <link linkend="glong">glong</link> index,
                                                         <link linkend="gpointer">gpointer</link> ret,
                                                         <link linkend="gpointer">gpointer</link> *args,
                                                         <link linkend="CORBA-Context">CORBA_Context</link> ctx,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>methods</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-get-type-id" role="function">
<title>ORBit_small_get_type_id ()</title>
<indexterm zone="ORBit-small-get-type-id"><primary sortas="ORBit_small_get_type_id">ORBit_small_get_type_id</primary></indexterm><programlisting><link linkend="CORBA-char">CORBA_char</link> *        ORBit_small_get_type_id             (<link linkend="CORBA-Object">CORBA_Object</link> object,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBitAsyncInvokeFunc" role="function">
<title>ORBitAsyncInvokeFunc ()</title>
<indexterm zone="ORBitAsyncInvokeFunc"><primary sortas="ORBitAsyncInvokeFunc">ORBitAsyncInvokeFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*ORBitAsyncInvokeFunc)             (<link linkend="CORBA-Object">CORBA_Object</link> object,
                                                         <link linkend="ORBit-IMethod">ORBit_IMethod</link> *m_data,
                                                         <link linkend="ORBitAsyncQueueEntry">ORBitAsyncQueueEntry</link> *aqe,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aqe</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-demarshal-async" role="function">
<title>ORBit_small_demarshal_async ()</title>
<indexterm zone="ORBit-small-demarshal-async"><primary sortas="ORBit_small_demarshal_async">ORBit_small_demarshal_async</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_small_demarshal_async         (<link linkend="ORBitAsyncQueueEntry">ORBitAsyncQueueEntry</link> *aqe,
                                                         <link linkend="gpointer">gpointer</link> ret,
                                                         <link linkend="gpointer">gpointer</link> *args,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>aqe</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-invoke-stub" role="function">
<title>ORBit_small_invoke_stub ()</title>
<indexterm zone="ORBit-small-invoke-stub"><primary sortas="ORBit_small_invoke_stub">ORBit_small_invoke_stub</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_small_invoke_stub             (<link linkend="CORBA-Object">CORBA_Object</link> object,
                                                         <link linkend="ORBit-IMethod">ORBit_IMethod</link> *m_data,
                                                         <link linkend="gpointer">gpointer</link> ret,
                                                         <link linkend="gpointer">gpointer</link> *args,
                                                         <link linkend="CORBA-Context">CORBA_Context</link> ctx,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-invoke-async" role="function">
<title>ORBit_small_invoke_async ()</title>
<indexterm zone="ORBit-small-invoke-async"><primary sortas="ORBit_small_invoke_async">ORBit_small_invoke_async</primary></indexterm><programlisting><link linkend="void">void</link>                ORBit_small_invoke_async            (<link linkend="CORBA-Object">CORBA_Object</link> obj,
                                                         <link linkend="ORBit-IMethod">ORBit_IMethod</link> *m_data,
                                                         <link linkend="ORBitAsyncInvokeFunc">ORBitAsyncInvokeFunc</link> fn,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="gpointer">gpointer</link> *args,
                                                         <link linkend="CORBA-Context">CORBA_Context</link> ctx,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>
This method is used to invoke a remote (or local) method
asynchronously. <parameter>fn</parameter> is called back on return - either with an empty
CORBA_Environment indicating success, or with the error.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m_data</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fn</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBIT-SMALL-FAST-LOCALS--CAPS" role="macro">
<title>ORBIT_SMALL_FAST_LOCALS</title>
<indexterm zone="ORBIT-SMALL-FAST-LOCALS--CAPS"><primary sortas="ORBIT_SMALL_FAST_LOCALS">ORBIT_SMALL_FAST_LOCALS</primary></indexterm><programlisting>#define ORBIT_SMALL_FAST_LOCALS           1
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ORBIT-SMALL-FORCE-GENERIC-MARSHAL--CAPS" role="macro">
<title>ORBIT_SMALL_FORCE_GENERIC_MARSHAL</title>
<indexterm zone="ORBIT-SMALL-FORCE-GENERIC-MARSHAL--CAPS"><primary sortas="ORBIT_SMALL_FORCE_GENERIC_MARSHAL">ORBIT_SMALL_FORCE_GENERIC_MARSHAL</primary></indexterm><programlisting>#define ORBIT_SMALL_FORCE_GENERIC_MARSHAL 2
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ORBit-small-get-types" role="function">
<title>ORBit_small_get_types ()</title>
<indexterm zone="ORBit-small-get-types"><primary sortas="ORBit_small_get_types">ORBit_small_get_types</primary></indexterm><programlisting><link linkend="CORBA-sequence-CORBA-TypeCode">CORBA_sequence_CORBA_TypeCode</link> * ORBit_small_get_types   (const <link linkend="char">char</link> *name);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ORBit-small-load-typelib" role="function">
<title>ORBit_small_load_typelib ()</title>
<indexterm zone="ORBit-small-load-typelib"><primary sortas="ORBit_small_load_typelib">ORBit_small_load_typelib</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            ORBit_small_load_typelib            (const <link linkend="char">char</link> *libname);</programlisting>
<para>
This method has security issues if you do not use
an absolute path in <parameter>libname</parameter>. The environment variables
ORBIT_TYPELIB_PATH and GNOME2_PATH are used to scan for
type libraries.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>libname</parameter>&#160;:</term>
<listitem><simpara> the name of the type library to load
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> FALSE if load failed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
